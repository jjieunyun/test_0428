{"version":3,"file":"js/594-legacy.6afbdaa6.js","mappings":"uJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,UAAUH,EAAG,QAAQ,CAACJ,EAAIQ,GAAG,GAAGR,EAAIS,GAAIT,EAAQ,MAAE,SAASU,EAAKC,GAAO,OAAOP,EAAG,KAAK,CAACQ,IAAID,GAAO,CAACP,EAAG,KAAK,CAACE,YAAY,YAAY,CAACN,EAAIO,GAAGP,EAAIa,GAAGH,EAAKI,OAAOV,EAAG,KAAK,CAACE,YAAY,WAAWS,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIiB,QAAQC,KAAM,SAAYR,EAAO,OAAO,CAACV,EAAIO,GAAGP,EAAIa,GAAGH,EAAKS,UAAUf,EAAG,KAAK,CAACE,YAAY,YAAY,CAACN,EAAIO,GAAGP,EAAIa,GAAGH,EAAKU,WAAWhB,EAAG,KAAK,CAACA,EAAG,SAAS,CAACW,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIiB,QAAQC,KAAM,WAAcR,EAAO,OAAO,CAACV,EAAIO,GAAG,WAAWH,EAAG,KAAK,CAACA,EAAG,SAAS,CAACW,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOhB,EAAIqB,WAAWX,EAAKI,OAAO,CAACd,EAAIO,GAAG,iBAAgB,MACpuBe,EAAkB,CAAC,WAAa,IAAItB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,KAAK,CAACE,YAAY,WAAW,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,SAASH,EAAG,KAAK,CAACJ,EAAIO,GAAG,WAAWH,EAAG,KAAK,CAACJ,EAAIO,GAAG,YAAYH,EAAG,KAAK,CAACJ,EAAIO,GAAG,YAAYH,EAAG,KAAK,CAACJ,EAAIO,GAAG,gBCyBvQ,GACIgB,OACI,MAAO,CACHC,KAAO,KAGfC,UACIxB,KAAKyB,MAAMC,IAAI,aACVC,MAAMC,IACH5B,KAAKuB,KAAOK,EAAIN,SAG5BO,QAAU,CACNT,WAAWP,GAEPb,KAAKyB,MAAMK,OAAO,aAAajB,KAC1Bc,MAAMC,IAIH5B,KAAKuB,KAAOK,EAAIN,WC9CqG,I,OCQrIS,GAAY,OACd,EACAjC,EACAuB,GACA,EACA,KACA,WACA,MAIF,EAAeU,EAAiB","sources":["webpack://client/./src/views/MemoListView.vue?0507","webpack://client/src/views/MemoListView.vue","webpack://client/./src/views/MemoListView.vue?baf2","webpack://client/./src/views/MemoListView.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"memolist\"},[_c('h1',[_vm._v(\"Memo\")]),_c('table',[_vm._m(0),_vm._l((_vm.memo),function(item,index){return _c('tr',{key:index},[_c('td',{staticClass:\"contents\"},[_vm._v(_vm._s(item.id))]),_c('td',{staticClass:\"contents\",on:{\"click\":function($event){return _vm.$router.push((\"/list/\" + (item.id)))}}},[_vm._v(_vm._s(item.title))]),_c('td',{staticClass:\"contents\"},[_vm._v(_vm._s(item.writer))]),_c('td',[_c('button',{on:{\"click\":function($event){return _vm.$router.push((\"/update/\" + (item.id)))}}},[_vm._v(\"Mod\")])]),_c('td',[_c('button',{on:{\"click\":function($event){return _vm.deleteMemo(item.id)}}},[_vm._v(\"Del\")])])])})],2)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',{staticClass:\"subject\"},[_c('td',[_vm._v(\"No.\")]),_c('td',[_vm._v(\"Title\")]),_c('td',[_vm._v(\"Writer\")]),_c('td',[_vm._v(\"Modify\")]),_c('td',[_vm._v(\"Delete\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"memolist\">\r\n        <h1>Memo</h1>\r\n        <table>\r\n            <tr class=\"subject\">\r\n                <td>No.</td>\r\n                <td>Title</td>\r\n                <td>Writer</td>\r\n                <td>Modify</td>\r\n                <td>Delete</td>\r\n            </tr>\r\n            <tr v-for=\"(item,index) in memo\" :key=\"index\">\r\n                <td class=\"contents\">{{item.id}}</td>\r\n                <td class=\"contents\" @click=\"$router.push(`/list/${item.id}`)\">{{item.title}}</td>\r\n                <td class=\"contents\">{{item.writer}}</td>\r\n                <!--수정버튼을 눌렀을 때, updateForm화면으로 이동\r\n                    이동할 때 가져가야 할값 : 메모아이디-->\r\n                <td><button @click=\"$router.push(`/update/${item.id}`)\">Mod</button></td>\r\n                <!--삭제버튼을 누르면 삭제할 메모의 아이디를 넘겨준다 -> 삭제 -->\r\n                <td><button @click=\"deleteMemo(item.id)\">Del</button></td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            memo : []\r\n        }\r\n    },\r\n    created() {\r\n        this.$http.get('/api/memo')\r\n            .then((res) =>{\r\n                this.memo = res.data;\r\n            })\r\n    },\r\n    methods : {\r\n        deleteMemo(id) {\r\n            //axios를 통해 id값을 가진 memo를 삭제\r\n            this.$http.delete(`/api/memo/${id}`)\r\n                .then((res) => {\r\n    //서버쪽에서 params로 id를 받아서 메모 배열을 삭제하는 api를만들고 client로 보낸다.\r\n    //값이 삭제된 메모의 배열을 새로 받아오고\r\n    //data안의 memo에 할당해서 출력한다.\r\n                    this.memo = res.data;\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n    width: 500px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    border-spacing: 0px;\r\n}\r\n.subject {\r\n    font-weight: bold;\r\n}\r\n\r\n.subject > td {\r\n    padding: 8px;\r\n    background-color: rgb(235, 233, 233);\r\n}\r\n\r\n.contents {\r\n    padding: 5px;\r\n}\r\n\r\nbutton {\r\n    margin: 5px;\r\n    background-color: transparent;\r\n    border: 1px solid lightslategray;\r\n    border-radius: 3px;\r\n    padding: 3px 5px;\r\n    \r\n}\r\n</style>","import mod from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MemoListView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MemoListView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MemoListView.vue?vue&type=template&id=8d934896&scoped=true&\"\nimport script from \"./MemoListView.vue?vue&type=script&lang=js&\"\nexport * from \"./MemoListView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MemoListView.vue?vue&type=style&index=0&id=8d934896&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8d934896\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_m","_l","item","index","key","_s","id","on","$event","$router","push","title","writer","deleteMemo","staticRenderFns","data","memo","created","$http","get","then","res","methods","delete","component"],"sourceRoot":""}